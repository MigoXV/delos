"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
CartPole-v1 streaming control protocol (Python-focused)
Bidirectional streaming: a client sends commands (reset/step/close)
and receives environment results as a stream. No rendering.

Generate Python code (requires grpcio-tools):
  python -m grpc_tools.protoc -I . \\
      --python_out=. --pyi_out=. --grpc_python_out=. cartpole_stream.proto

CartPole-v1 specifics:
  - Observation shape: [4] (float32)
  - Action space: Discrete{2} (0 = push left, 1 = push right)
  - Gymnasium-style termination flags: terminated, truncated
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class EnvRequest(google.protobuf.message.Message):
    """----------------------------
    Requests (client -> server)
    ----------------------------
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    EPISODE_ID_FIELD_NUMBER: builtins.int
    ENV_ID_FIELD_NUMBER: builtins.int
    RESET_FIELD_NUMBER: builtins.int
    STEP_FIELD_NUMBER: builtins.int
    CLOSE_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    """Optional correlation id chosen by the client (echoed in responses)"""
    episode_id: builtins.str
    """Optional logical episode/session id to help clients correlate a run"""
    env_id: builtins.str
    """For future extensibility: clients may send a specific env_id; default is "CartPole-v1" """
    @property
    def reset(self) -> global___Reset: ...
    @property
    def step(self) -> global___Step: ...
    @property
    def close(self) -> global___Close: ...
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        episode_id: builtins.str = ...,
        env_id: builtins.str = ...,
        reset: global___Reset | None = ...,
        step: global___Step | None = ...,
        close: global___Close | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["close", b"close", "command", b"command", "reset", b"reset", "step", b"step"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["close", b"close", "command", b"command", "env_id", b"env_id", "episode_id", b"episode_id", "request_id", b"request_id", "reset", b"reset", "step", b"step"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["command", b"command"]) -> typing.Literal["reset", "step", "close"] | None: ...

global___EnvRequest = EnvRequest

@typing.final
class Reset(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SEED_FIELD_NUMBER: builtins.int
    FORCE_FIELD_NUMBER: builtins.int
    seed: builtins.int
    """Optional random seed for reproducibility"""
    force: builtins.bool
    """If true, server should start a fresh episode even if one is already active"""
    def __init__(
        self,
        *,
        seed: builtins.int = ...,
        force: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["force", b"force", "seed", b"seed"]) -> None: ...

global___Reset = Reset

@typing.final
class Step(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ACTION_FIELD_NUMBER: builtins.int
    STEP_TIMEOUT_MS_FIELD_NUMBER: builtins.int
    action: builtins.int
    """Discrete action for CartPole-v1: 0 or 1"""
    step_timeout_ms: builtins.int
    """Optional: max wall-clock milliseconds the server should spend on this step
    (server MAY ignore)
    """
    def __init__(
        self,
        *,
        action: builtins.int = ...,
        step_timeout_ms: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["action", b"action", "step_timeout_ms", b"step_timeout_ms"]) -> None: ...

global___Step = Step

@typing.final
class Close(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REASON_FIELD_NUMBER: builtins.int
    reason: builtins.str
    """Optional reason sent by client"""
    def __init__(
        self,
        *,
        reason: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["reason", b"reason"]) -> None: ...

global___Close = Close

@typing.final
class EnvResponse(google.protobuf.message.Message):
    """----------------------------
    Responses (server -> client)
    ----------------------------
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUEST_ID_FIELD_NUMBER: builtins.int
    EPISODE_ID_FIELD_NUMBER: builtins.int
    STEP_INDEX_FIELD_NUMBER: builtins.int
    SERVER_TIME_MS_FIELD_NUMBER: builtins.int
    RESET_RESULT_FIELD_NUMBER: builtins.int
    STEP_RESULT_FIELD_NUMBER: builtins.int
    CLOSED_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    request_id: builtins.str
    """Echoed from request when applicable"""
    episode_id: builtins.str
    step_index: builtins.int
    """Monotonic step index within the current episode; 0 right after Reset"""
    server_time_ms: builtins.int
    """Server time in milliseconds since Unix epoch when this response was produced"""
    @property
    def reset_result(self) -> global___ResetResult: ...
    @property
    def step_result(self) -> global___StepResult: ...
    @property
    def closed(self) -> global___Closed: ...
    @property
    def error(self) -> global___EnvError: ...
    def __init__(
        self,
        *,
        request_id: builtins.str = ...,
        episode_id: builtins.str = ...,
        step_index: builtins.int = ...,
        server_time_ms: builtins.int = ...,
        reset_result: global___ResetResult | None = ...,
        step_result: global___StepResult | None = ...,
        closed: global___Closed | None = ...,
        error: global___EnvError | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["closed", b"closed", "error", b"error", "event", b"event", "reset_result", b"reset_result", "step_result", b"step_result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["closed", b"closed", "episode_id", b"episode_id", "error", b"error", "event", b"event", "request_id", b"request_id", "reset_result", b"reset_result", "server_time_ms", b"server_time_ms", "step_index", b"step_index", "step_result", b"step_result"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["event", b"event"]) -> typing.Literal["reset_result", "step_result", "closed", "error"] | None: ...

global___EnvResponse = EnvResponse

@typing.final
class ResetResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class InfoEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    OBSERVATION_FIELD_NUMBER: builtins.int
    INFO_FIELD_NUMBER: builtins.int
    @property
    def observation(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """Observation after reset; length is 4 for CartPole"""

    @property
    def info(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Optional info key-values (flattened as strings for simplicity)"""

    def __init__(
        self,
        *,
        observation: collections.abc.Iterable[builtins.float] | None = ...,
        info: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["info", b"info", "observation", b"observation"]) -> None: ...

global___ResetResult = ResetResult

@typing.final
class StepResult(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class InfoEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    OBSERVATION_FIELD_NUMBER: builtins.int
    REWARD_FIELD_NUMBER: builtins.int
    TERMINATED_FIELD_NUMBER: builtins.int
    TRUNCATED_FIELD_NUMBER: builtins.int
    INFO_FIELD_NUMBER: builtins.int
    reward: builtins.float
    """Scalar reward from this step"""
    terminated: builtins.bool
    """Gymnasium-style termination flags
    True if episode ended due to task success/failure
    """
    truncated: builtins.bool
    """True if episode ended due to time or external limit"""
    @property
    def observation(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """Observation after this step"""

    @property
    def info(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Optional info key-values (flattened as strings for simplicity)"""

    def __init__(
        self,
        *,
        observation: collections.abc.Iterable[builtins.float] | None = ...,
        reward: builtins.float = ...,
        terminated: builtins.bool = ...,
        truncated: builtins.bool = ...,
        info: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["info", b"info", "observation", b"observation", "reward", b"reward", "terminated", b"terminated", "truncated", b"truncated"]) -> None: ...

global___StepResult = StepResult

@typing.final
class Closed(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MESSAGE_FIELD_NUMBER: builtins.int
    message: builtins.str
    """Human-readable message"""
    def __init__(
        self,
        *,
        message: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["message", b"message"]) -> None: ...

global___Closed = Closed

@typing.final
class EnvError(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class DetailsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    CODE_FIELD_NUMBER: builtins.int
    MESSAGE_FIELD_NUMBER: builtins.int
    DETAILS_FIELD_NUMBER: builtins.int
    code: builtins.int
    """Canonical gRPC-like code (e.g., 3 = INVALID_ARGUMENT, 5 = NOT_FOUND, 13 = INTERNAL)"""
    message: builtins.str
    @property
    def details(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """Optional details"""

    def __init__(
        self,
        *,
        code: builtins.int = ...,
        message: builtins.str = ...,
        details: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["code", b"code", "details", b"details", "message", b"message"]) -> None: ...

global___EnvError = EnvError
