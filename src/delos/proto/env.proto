syntax = "proto3";

package env;

import "google/protobuf/empty.proto";

message SpaceSpec {
  // 空间类型：如 "Box"
  string type = 1;
  // 形状：如 [3] 或 [1]
  repeated int64 shape = 2;
  // 仅对 Box 有意义：上下界
  repeated float low = 3;
  repeated float high = 4;
}

message SpecResponse {
  string env_id = 1;          // 例如 "Pendulum-v1"
  SpaceSpec observation = 2;  // 观测空间
  SpaceSpec action = 3;       // 动作空间
}

message ResetRequest {
  // 可选种子；不传或传 <0 表示不设定
  int32 seed = 1;
}

message ResetResponse {
  repeated float observation = 1; // 初始观测（展平）
}

message StepRequest {
  repeated float action = 1;  // 动作（展平）
}

message StepResponse {
  repeated float observation = 1; // 下一观测
  double reward = 2;              // 即时回报
  bool terminated = 3;            // 终止（成功/失败）
  bool truncated = 4;             // 截断（时间上限等）
}

message FrameRequest {
  int32 width = 1;   // 帧宽度 (可选，默认由环境决定)
  int32 height = 2;  // 帧高度 (可选，默认由环境决定)
  string mode = 3;   // 渲染模式，如 "rgb_array" (可选)
}

message FrameResponse {
  bytes image_data = 1;  // 图像数据 (PNG/JPEG 格式)
  int32 width = 2;       // 实际宽度
  int32 height = 3;      // 实际高度
  string format = 4;     // 图像格式 ("png" 或 "jpeg")
  int64 timestamp = 5;   // 时间戳 (毫秒)
  bool has_frame = 6;    // 是否有有效帧
}

service Env {
  rpc Spec(google.protobuf.Empty) returns (SpecResponse);
  rpc Reset(ResetRequest) returns (ResetResponse);
  rpc Step(StepRequest) returns (StepResponse);
  rpc Close(google.protobuf.Empty) returns (google.protobuf.Empty);
  rpc StreamFrames(FrameRequest) returns (stream FrameResponse);
}
